{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/posts/post-create/post-create.component.ts","./src/app/posts/post-create/post-create.component.html","./src/app/posts/post-list/post-list.component.ts","./src/app/posts/post-list/post-list.component.html","./src/app/posts/posts.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\nimport { PostListComponent } from './posts/post-list/post-list.component';\n\n\nconst routes: Routes = [\n  {path: '', component:PostListComponent},\n  {path:'create', component: PostCreateComponent},\n  {path:'edit/:postId', component: PostCreateComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","<app-header></app-header>\n<main>\n<router-outlet></router-outlet>\n</main>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {HttpClientModule} from '@angular/common/http'\n\nimport { AppComponent } from \"./app.component\";\nimport { PostCreateComponent } from \"./posts/post-create/post-create.component\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { PostListComponent } from \"./posts/post-list/post-list.component\";\nimport { AppRoutingModule } from './app-routing.module';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostCreateComponent,\n    HeaderComponent,\n    PostListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    HttpClientModule,\n    AppRoutingModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls:['./header.component.css']\n})\nexport class HeaderComponent {}\n","<mat-toolbar color=\"primary\"><span><a routerLink=\"/\">MyMessages</a></span>\n  <span class=\"spacer\"></span>\n<ul>\n  <li>\n    <a mat-button routerLinkActive=\"mat-accent\" routerLink=\"/create\">New Post</a>\n  </li>\n</ul>\n</mat-toolbar>\n","import { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\n\nimport { PostsService } from \"../posts.service\";\nimport { Post } from \"../post.model\";\n\n@Component({\n  selector: \"app-post-create\",\n  templateUrl: \"./post-create.component.html\",\n  styleUrls: [\"./post-create.component.css\"]\n})\nexport class PostCreateComponent implements OnInit {\n  enteredTitle = \"\";\n  enteredContent = \"\";\n  post: Post;\n  isLoading = false;\n  private mode = \"create\";\n  private postId: string;\n\n  constructor(\n    public postsService: PostsService,\n    public route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has(\"postId\")) {\n        this.mode = \"edit\";\n        this.postId = paramMap.get(\"postId\");\n        this.isLoading = true;\n        this.postsService.getPost(this.postId).subscribe(postData => {\n          this.isLoading = false;\n          this.post = {_id: postData._id, title: postData.title, content: postData.content};\n        });\n      } else {\n        this.mode = \"create\";\n        this.postId = null;\n      }\n    });\n  }\n\n  onSavePost(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (this.mode === \"create\") {\n      this.postsService.addPost(form.value.title, form.value.content);\n    } else {\n      this.postsService.updatePost(\n        this.postId,\n        form.value.title,\n        form.value.content\n      );\n    }\n    form.resetForm();\n  }\n}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <form (submit)=\"onSavePost(postForm)\" #postForm=\"ngForm\" *ngIf=\"!isLoading\">\n    <mat-form-field>\n      <input\n        matInput\n        type=\"text\"\n        name=\"title\"\n        [ngModel]=\"post?.title\"\n        required\n        minlength=\"3\"\n        placeholder=\"Post Title\"\n        #title=\"ngModel\">\n      <mat-error *ngIf=\"title.invalid\">Please enter a post title.</mat-error>\n    </mat-form-field>\n    <button type=\"button\" mat-mat-stroked-button (click)=\"filePicker.click()\">Pick Image</button>\n    <input type=\"file\" #filePicker>\n    <mat-form-field>\n      <textarea\n        matInput\n        rows=\"4\"\n        name=\"content\"\n        [ngModel]=\"post?.content\"\n        required\n        placeholder=\"Post Content\"\n        #content=\"ngModel\"></textarea>\n      <mat-error *ngIf=\"content.invalid\">Please enter a post title.</mat-error>\n    </mat-form-field>\n    <button\n      mat-raised-button\n      color=\"accent\"\n      type=\"submit\">Save Post</button>\n  </form>\n</mat-card>\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { Subscription } from 'rxjs';\n\nimport { Post } from \"../post.model\";\nimport { PostsService } from \"../posts.service\";\n\n@Component({\n  selector: \"app-post-list\",\n  templateUrl: \"./post-list.component.html\",\n  styleUrls: [\"./post-list.component.css\"]\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n  // posts = [\n  //   { title: \"First Post\", content: \"This is the first post's content\" },\n  //   { title: \"Second Post\", content: \"This is the second post's content\" },\n  //   { title: \"Third Post\", content: \"This is the third post's content\" }\n  // ];\n  posts: Post[] = [];\n  private postsSub: Subscription;\n\n  constructor(public postsService: PostsService) {}\n\n  ngOnInit() {\n  this.postsService.getPosts();\n    this.postsSub = this.postsService.getPostUpdateListener()\n      .subscribe((posts: Post[]) => {\n        this.posts = posts;\n      });\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n  }\n  onDelete(id:string){\n    this.postsService.deletePost(id);\n  }\n}\n","<mat-accordion multi=\"true\" *ngIf=\"posts.length > 0\">\n  <mat-expansion-panel *ngFor=\"let post of posts\">\n    <mat-expansion-panel-header>\n      {{ post.title }}\n    </mat-expansion-panel-header>\n    <p>{{ post.content }}</p>\n    <mat-action-row>\n      <a mat-button color=\"primary\"[routerLink]=\"['/edit',post._id]\">EDIT</a>\n      <button mat-button color=\"warn\" (click)=\"onDelete(post._id)\">DELETE</button>\n    </mat-action-row>\n  </mat-expansion-panel>\n</mat-accordion>\n<p class=\"info-text mat-body-1\" *ngIf=\"posts.length <= 0\">No posts added yet!</p>\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Post } from './post.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({providedIn: 'root'})\nexport class PostsService {\n  private posts: any = [];\n  private postsUpdated = new Subject<Post[]>();\n\n  constructor(private http: HttpClient, private router: Router){}\n  getPosts() {\n   this.http.get<{message:string, posts:any}>('http://localhost:3000/api/posts')\n   .subscribe(postData=>{\n    this.posts = postData.posts;\n    this.postsUpdated.next([...this.posts]);\n   });\n  }\n\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n\n  addPost(title: string, content: string) {\n    const post: Post = {_id:null,title: title, content: content};\n    this.http.post<{message: string, postid:string}>('http://localhost:3000/api/posts',post)\n    .subscribe((resp)=>{\n      const id = resp.postid;\n      post._id =id;\n      console.log(resp.message)\n    });\n    this.posts.push(post);\n    this.postsUpdated.next([...this.posts]);\n    this.router.navigate([\"/\"]);\n  }\n  updatePost(id:string,title:string,content:string){\n    const post: Post ={_id:id, title:title,content:content};\n    this.http.put('http://localhost:3000/api/posts/'+id,post)\n    .subscribe(res=>{\n      console.log(res);\n    })\n    this.router.navigate([\"/\"]);\n  }\n  deletePost(id:string){\n    this.http.delete('http://localhost:3000/api/posts/'+id).subscribe(ele=>{\n     const updatedPost = this.posts.filter(post=>post._id !== id);\n     this.posts = updatedPost;\n     this.postsUpdated.next([...this.posts]);\n    })\n  }\n  getPost(id: string) {\n    return this.http.get<{ _id: string; title: string; content: string }>(\n      \"http://localhost:3000/api/posts/\" + id\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}