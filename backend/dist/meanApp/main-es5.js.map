{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/posts/post-create/post-create.component.ts","webpack:///src/app/posts/post-create/post-create.component.html","webpack:///src/app/posts/post-list/post-list.component.ts","webpack:///src/app/posts/post-list/post-list.component.html","webpack:///src/app/posts/posts.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HeaderComponent","PostCreateComponent","postsService","route","enteredTitle","enteredContent","isLoading","mode","paramMap","subscribe","has","postId","get","getPost","postData","post","_id","title","content","form","invalid","addPost","value","updatePost","resetForm","PostListComponent","posts","getPosts","postsSub","getPostUpdateListener","unsubscribe","deletePost","PostsService","http","router","postsUpdated","next","asObservable","resp","postid","console","log","message","push","navigate","put","res","ele","updatedPost","filter","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\nimport { PostListComponent } from './posts/post-list/post-list.component';\n\n\nconst routes: Routes = [\n  {path: '', component:PostListComponent},\n  {path:'create', component: PostCreateComponent},\n  {path:'edit/:postId', component: PostCreateComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","<app-header></app-header>\n<main>\n<router-outlet></router-outlet>\n</main>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {HttpClientModule} from '@angular/common/http'\n\nimport { AppComponent } from \"./app.component\";\nimport { PostCreateComponent } from \"./posts/post-create/post-create.component\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { PostListComponent } from \"./posts/post-list/post-list.component\";\nimport { AppRoutingModule } from './app-routing.module';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostCreateComponent,\n    HeaderComponent,\n    PostListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    HttpClientModule,\n    AppRoutingModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls:['./header.component.css']\n})\nexport class HeaderComponent {}\n","<mat-toolbar color=\"primary\"><span><a routerLink=\"/\">MyMessages</a></span>\n  <span class=\"spacer\"></span>\n<ul>\n  <li>\n    <a mat-button routerLinkActive=\"mat-accent\" routerLink=\"/create\">New Post</a>\n  </li>\n</ul>\n</mat-toolbar>\n","import { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\n\nimport { PostsService } from \"../posts.service\";\nimport { Post } from \"../post.model\";\n\n@Component({\n  selector: \"app-post-create\",\n  templateUrl: \"./post-create.component.html\",\n  styleUrls: [\"./post-create.component.css\"]\n})\nexport class PostCreateComponent implements OnInit {\n  enteredTitle = \"\";\n  enteredContent = \"\";\n  post: Post;\n  isLoading = false;\n  private mode = \"create\";\n  private postId: string;\n\n  constructor(\n    public postsService: PostsService,\n    public route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has(\"postId\")) {\n        this.mode = \"edit\";\n        this.postId = paramMap.get(\"postId\");\n        this.isLoading = true;\n        this.postsService.getPost(this.postId).subscribe(postData => {\n          this.isLoading = false;\n          this.post = {_id: postData._id, title: postData.title, content: postData.content};\n        });\n      } else {\n        this.mode = \"create\";\n        this.postId = null;\n      }\n    });\n  }\n\n  onSavePost(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (this.mode === \"create\") {\n      this.postsService.addPost(form.value.title, form.value.content);\n    } else {\n      this.postsService.updatePost(\n        this.postId,\n        form.value.title,\n        form.value.content\n      );\n    }\n    form.resetForm();\n  }\n}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <form (submit)=\"onSavePost(postForm)\" #postForm=\"ngForm\" *ngIf=\"!isLoading\">\n    <mat-form-field>\n      <input\n        matInput\n        type=\"text\"\n        name=\"title\"\n        [ngModel]=\"post?.title\"\n        required\n        minlength=\"3\"\n        placeholder=\"Post Title\"\n        #title=\"ngModel\">\n      <mat-error *ngIf=\"title.invalid\">Please enter a post title.</mat-error>\n    </mat-form-field>\n    <button type=\"button\" mat-mat-stroked-button (click)=\"filePicker.click()\">Pick Image</button>\n    <input type=\"file\" #filePicker>\n    <mat-form-field>\n      <textarea\n        matInput\n        rows=\"4\"\n        name=\"content\"\n        [ngModel]=\"post?.content\"\n        required\n        placeholder=\"Post Content\"\n        #content=\"ngModel\"></textarea>\n      <mat-error *ngIf=\"content.invalid\">Please enter a post title.</mat-error>\n    </mat-form-field>\n    <button\n      mat-raised-button\n      color=\"accent\"\n      type=\"submit\">Save Post</button>\n  </form>\n</mat-card>\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { Subscription } from 'rxjs';\n\nimport { Post } from \"../post.model\";\nimport { PostsService } from \"../posts.service\";\n\n@Component({\n  selector: \"app-post-list\",\n  templateUrl: \"./post-list.component.html\",\n  styleUrls: [\"./post-list.component.css\"]\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n  // posts = [\n  //   { title: \"First Post\", content: \"This is the first post's content\" },\n  //   { title: \"Second Post\", content: \"This is the second post's content\" },\n  //   { title: \"Third Post\", content: \"This is the third post's content\" }\n  // ];\n  posts: Post[] = [];\n  private postsSub: Subscription;\n\n  constructor(public postsService: PostsService) {}\n\n  ngOnInit() {\n  this.postsService.getPosts();\n    this.postsSub = this.postsService.getPostUpdateListener()\n      .subscribe((posts: Post[]) => {\n        this.posts = posts;\n      });\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n  }\n  onDelete(id:string){\n    this.postsService.deletePost(id);\n  }\n}\n","<mat-accordion multi=\"true\" *ngIf=\"posts.length > 0\">\n  <mat-expansion-panel *ngFor=\"let post of posts\">\n    <mat-expansion-panel-header>\n      {{ post.title }}\n    </mat-expansion-panel-header>\n    <p>{{ post.content }}</p>\n    <mat-action-row>\n      <a mat-button color=\"primary\"[routerLink]=\"['/edit',post._id]\">EDIT</a>\n      <button mat-button color=\"warn\" (click)=\"onDelete(post._id)\">DELETE</button>\n    </mat-action-row>\n  </mat-expansion-panel>\n</mat-accordion>\n<p class=\"info-text mat-body-1\" *ngIf=\"posts.length <= 0\">No posts added yet!</p>\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Post } from './post.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({providedIn: 'root'})\nexport class PostsService {\n  private posts: any = [];\n  private postsUpdated = new Subject<Post[]>();\n\n  constructor(private http: HttpClient, private router: Router){}\n  getPosts() {\n   this.http.get<{message:string, posts:any}>('http://localhost:3000/api/posts')\n   .subscribe(postData=>{\n    this.posts = postData.posts;\n    this.postsUpdated.next([...this.posts]);\n   });\n  }\n\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n\n  addPost(title: string, content: string) {\n    const post: Post = {_id:null,title: title, content: content};\n    this.http.post<{message: string, postid:string}>('http://localhost:3000/api/posts',post)\n    .subscribe((resp)=>{\n      const id = resp.postid;\n      post._id =id;\n      console.log(resp.message)\n    });\n    this.posts.push(post);\n    this.postsUpdated.next([...this.posts]);\n    this.router.navigate([\"/\"]);\n  }\n  updatePost(id:string,title:string,content:string){\n    const post: Post ={_id:id, title:title,content:content};\n    this.http.put('http://localhost:3000/api/posts/'+id,post)\n    .subscribe(res=>{\n      console.log(res);\n    })\n    this.router.navigate([\"/\"]);\n  }\n  deletePost(id:string){\n    this.http.delete('http://localhost:3000/api/posts/'+id).subscribe(ele=>{\n     const updatedPost = this.posts.filter(post=>post._id !== id);\n     this.posts = updatedPost;\n     this.postsUpdated.next([...this.posts]);\n    })\n  }\n  getPost(id: string) {\n    return this.http.get<{ _id: string; title: string; content: string }>(\n      \"http://localhost:3000/api/posts/\" + id\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"]}